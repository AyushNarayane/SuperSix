rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isStudent() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isAdmin() || isOwner(userId));
      allow create: if true; // Temporarily allow creation for initialization
      allow update: if isAuthenticated() && (isAdmin() || isOwner(userId));
      allow delete: if isAdmin();
    }

    // Courses collection
    match /courses/{courseId} {
      allow read: if true; // Public access for course listings
      allow write: if isAdmin();
    }

    // Live Classes collection
    match /liveClasses/{classId} {
      allow read: if true; // Public access for class listings
      allow write: if isAdmin();
    }

    // Banners collection
    match /banners/{bannerId} {
      allow read: if true; // Public access for banners
      allow write: if isAdmin();
    }

    // Study Materials collection
    match /studyMaterials/{materialId} {
      allow read: if isAuthenticated() && (isAdmin() || isStudent());
      allow write: if isAdmin();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true; // Public access for reviews
      allow create: if isStudent(); // Only students can create reviews
      allow update, delete: if isAdmin();
    }

    // Payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (isAdmin() || resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Enrollments collection
    match /enrollments/{enrollmentId} {
      allow read: if isAuthenticated() && (isAdmin() || resource.data.userId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
  }
}